// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render EditExpensePage 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Provider>
    <Connect(EditExpensePage)
        editExpense={[Function]}
        expense={
            Object {
                "amount": 4500,
                "createdAt": 345600000,
                "description": "Credit Card",
                "id": "3",
                "note": "",
              }
        }
        history={
            Object {
                "push": [Function],
              }
        }
        removeExpense={[Function]}
    />
</Provider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "editExpense": [Function],
      "expense": Object {
        "amount": 4500,
        "createdAt": 345600000,
        "description": "Credit Card",
        "id": "3",
        "note": "",
      },
      "history": Object {
        "push": [Function],
      },
      "removeExpense": [Function],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "editExpense": [Function],
        "expense": Object {
          "amount": 4500,
          "createdAt": 345600000,
          "description": "Credit Card",
          "id": "3",
          "note": "",
        },
        "history": Object {
          "push": [Function],
        },
        "removeExpense": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): Object {
    "store": undefined,
    "storeSubscription": null,
  },
}
`;
